% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_repo.R, R/local_repo_add.R,
%   R/local_repo_branch.R, R/local_repo_commit.R, R/local_repo_log.R,
%   R/local_repo_pull.R, R/local_repo_push.R
\name{local_repo}
\alias{local_repo}
\alias{local_repo_add}
\alias{local_repo_branch}
\alias{local_repo_commit}
\alias{local_repo_log}
\alias{local_repo_pull}
\alias{local_repo_push}
\title{Local repository tools}
\usage{
local_repo_add(repo_dir, files = ".")

local_repo_branch(repo_dir, branch)

local_repo_commit(repo_dir, message)

local_repo_log(repo_dir, max = 100)

local_repo_pull(repo_dir, branch = "master", verbose = FALSE)

local_repo_push(
  repo_dir,
  remote = "origin",
  branch = "master",
  force = FALSE,
  prompt = TRUE,
  mirror = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{repo_dir}{Vector of repo directories or a single directory containing one or more repos.}

\item{files}{Files to be staged}

\item{branch}{Repository branch to use.}

\item{message}{Commit message}

\item{max}{Maximum number of log entries to retrieve per repo.}

\item{verbose}{Display verbose output.}

\item{remote}{Repository remote to use.}

\item{force}{Force push?}

\item{prompt}{Prompt before force push?}

\item{mirror}{Equivalent to \code{--mirror}}
}
\description{
The functions provide tools for working with local git repositories, ghclass includes support for following git commands:
\itemize{
\item git add = \code{local_repo_add}
\item git commit = \code{local_repo_commit}
\item git push = \code{local_repo_push}
\item git pull = \code{local_repo_pull}
\item git branch = \code{local_repo_branch}
\item git log = \code{local_repo_log}
}
}
\examples{
\dontrun{
repo = repo_create("ghclass-test", "local_repo_test")

dir = file.path(tempdir(), "repos")
local_repo = local_repo_clone(repo, dir)

local_repo_log(dir)

# Make a local change and push
writeLines("Hello World", file.path(local_repo, "hello.txt"))
local_repo_add(local_repo, "hello.txt")
local_repo_commit(local_repo, "Added hello world")
local_repo_push(local_repo)

repo_commits(repo)

# Pulling remote changes
repo_modify_file(repo, "hello.txt", pattern = ".*",  content = "!!!", method = "after")
local_repo_pull(local_repo)
local_repo_log(dir)

repo_delete("ghclass-test/local_repo_test", prompt=FALSE)
}

\dontrun{
local_repo = local_repo_clone("Sta323-Sp19/hw1", tempdir())

repo = repo_create("ghclass-demo", "hw1-mirror")
repo_url = paste0("https://github.com/",repo,".git")

local_repo_push(local_repo, remote = repo_url, force = TRUE, prompt = FALSE, mirror = TRUE)

repo_delete(repo, prompt = FALSE)
}

}
