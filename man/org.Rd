% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/org.R, R/org_admins.R, R/org_exists.R,
%   R/org_invite.R, R/org_members.R, R/org_pending.R, R/org_remove.R,
%   R/org_repo_stats.R, R/org_repos.R, R/org_sitrep.R, R/org_team_details.R,
%   R/org_teams.R, R/org_update.R
\name{org}
\alias{org}
\alias{org_admins}
\alias{org_exists}
\alias{org_invite}
\alias{org_members}
\alias{org_pending}
\alias{org_remove}
\alias{org_repo_stats}
\alias{org_repos}
\alias{org_sitrep}
\alias{org_team_details}
\alias{org_teams}
\alias{org_set_repo_permission}
\title{GitHub Organization related tools}
\usage{
org_admins(org)

org_exists(org)

org_invite(org, user)

org_members(org, filter = NULL, exclude = FALSE, include_admins = TRUE)

org_pending(org, filter = NULL, exclude = FALSE)

org_remove(org, user, prompt = TRUE)

org_repo_stats(
  org,
  filter = "",
  filter_type = "in:name",
  inc_commits = TRUE,
  inc_issues = TRUE,
  inc_prs = TRUE
)

org_repos(org, filter = NULL, exclude = FALSE, full_repo = TRUE)

org_sitrep(org)

org_team_details(org)

org_teams(org, filter = NULL, exclude = FALSE, team_type = c("slug", "name"))

org_set_repo_permission(org, permission = c("none", "read", "write", "admin"))
}
\arguments{
\item{org}{Character. Name of the GitHub organization(s).}

\item{user}{Character. GitHub username(s).}

\item{filter}{Character. Regular expression pattern for matching (or excluding) results}

\item{exclude}{Logical. Should entries matching the regular expression be excluded or included.}

\item{include_admins}{Logical. Should admin users be included in the results.}

\item{prompt}{Logical. Prompt before removing member from organization.}

\item{filter_type}{Character. One or more GitHub search \verb{in} qualifiers.
See \href{https://help.github.com/en/articles/searching-for-repositories}{documentation}
for more details.}

\item{inc_commits}{Logical. Include commit statistics}

\item{inc_issues}{Logical. Include issue statistics}

\item{inc_prs}{Logical. Include pull request statistics}

\item{full_repo}{Logical. Should the full repository address be returned (e.g. \code{owner/repo} instead of just \code{repo})?}

\item{team_type}{Character. Either "slug" if the team names are slugs or "name" if full team names are provided.}

\item{permission}{Default permission level members have for organization repositories:
\itemize{
\item read - can pull, but not push to or administer this repository.
\item write - can pull and push, but not administer this repository.
\item admin - can pull, push, and administer this repository.
\item none - no permissions granted by default.
}}
}
\description{
\code{org_sitrep} - Provides a situation report on a GitHub organization.

\code{org_set_repo_permission} - Change the default permission level for org repositories.

\code{org_admins} - returns a vector of repository administrators. In the case of a
non-organization owner (e.g. a user account) returns the owner's login.

\code{org_exists} - returns \code{TRUE} if the organization(s) exist on GitHub and \code{FALSE} otherwise.

\code{org_invite} - invites user(s) to a GitHub organization.

\code{org_remove} - remove user(s) from an organization (and all teams within that organization).

\code{org_members} - returns a (filtered) vector of organization members.

\code{org_pending} - returns a (filtered) vector of pending organization members.

\code{org_repos} - returns a (filtered) vector of organization repositories.

\code{org_teams} - returns a (filtered) vector of organization teams.

\code{org_team_details} - returns a data frame of all organization teams containing identification and permission details.
\subsection{Experimental}{

\code{org_repo_stats} - returns a tibble of repositories belonging to a GitHub organization along with some
basic statistics about those repositories.
}
}
\examples{
\dontrun{
# Org Details
org_admins("ghclass-test")
org_admins("rundel") # User, not an organization

org_exists(c("rundel","ghclass-test"))

# Org Membership - Invite, Status, and Remove
students = c("ghclass-anya", "ghclass-bruno", "ghclass-celine",
         "ghclass-diego", "ghclass-elijah","ghclass-francis")
org_invite(students)

org_members("ghclass-test")
org_pending("ghclass-test")

org_remove("ghclass-test", students)
org_pending("ghclass-test")

# Org repos and teams
org_repos("ghclass-test")
org_repos("ghclass-test", "hw1-")
org_teams("ghclass-test")

org_team_details("ghclass-test")
}

\dontrun{
org_repo_stats("ghclass-test")
}

}
\seealso{
\link{org_repo_stats}
}
